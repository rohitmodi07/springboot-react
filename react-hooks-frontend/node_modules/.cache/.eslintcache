[{"D:\\My_Folder\\SpringBoot-React-projects\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\index.js":"1","D:\\My_Folder\\SpringBoot-React-projects\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\reportWebVitals.js":"2","D:\\My_Folder\\SpringBoot-React-projects\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\App.js":"3","D:\\My_Folder\\SpringBoot-React-projects\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\HeaderComponent.js":"4","D:\\My_Folder\\SpringBoot-React-projects\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\FooterComponent.js":"5","D:\\My_Folder\\SpringBoot-React-projects\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\services\\EmployeeService.js":"6","D:\\My_Folder\\SpringBoot-React-projects\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\LoginComponent.js":"7","D:\\My_Folder\\SpringBoot-React-projects\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\ResignationFormComponent.js":"8"},{"size":546,"mtime":1641056093251,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1641056093329,"results":"11","hashOfConfig":"10"},{"size":884,"mtime":1644735177583,"results":"12","hashOfConfig":"10"},{"size":519,"mtime":1644735416107,"results":"13","hashOfConfig":"10"},{"size":295,"mtime":1644735342121,"results":"14","hashOfConfig":"10"},{"size":1034,"mtime":1641576416083,"results":"15","hashOfConfig":"10"},{"size":4174,"mtime":1644735087399,"results":"16","hashOfConfig":"10"},{"size":6566,"mtime":1644735604235,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"skt7zt",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\My_Folder\\SpringBoot-React-projects\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\index.js",[],"D:\\My_Folder\\SpringBoot-React-projects\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\reportWebVitals.js",[],"D:\\My_Folder\\SpringBoot-React-projects\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\App.js",[],"D:\\My_Folder\\SpringBoot-React-projects\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\HeaderComponent.js",[],"D:\\My_Folder\\SpringBoot-React-projects\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\FooterComponent.js",[],"D:\\My_Folder\\SpringBoot-React-projects\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\services\\EmployeeService.js",[],"D:\\My_Folder\\SpringBoot-React-projects\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\LoginComponent.js",["36","37"],"import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService'\n\nconst LoginComponent = () => {\n\n    const [employeeEmailId, setEmployeeEmailId] = useState('');\n    const [employeeId, setEmployeeId] = useState('');\n    const history = useHistory();\n\n    const loginToPortal = (e) => {\n        e.preventDefault();\n        \n        if(employeeEmailId === ''){\n            alert(\"Employee email id is mandatory !\");\n            return false\n         }else{\n            const mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n            if(!employeeEmailId.match(mailformat)){\n                alert(\"please enter valid email id !\");\n                return false\n            }\n         }\n         if(employeeId === ''){\n            alert(\"Employee Id is mandatory !\");\n            return false\n         }\n         \n        EmployeeService.loginService(employeeId, employeeEmailId).then((response) =>{\n            if(response.data!==''){\n                let path = `/apply-resignation/${employeeId}/${employeeEmailId}`;\n                history.push(path);\n            }else{\n                alert(\"employee does not exist!\")\n                return false;\n            }\n        }).catch(error => {\n            console.log(error)\n            alert(\"employee does not exist!\")\n            return false;\n        })\n\n        \n    }\n\n    const resetLogin = (e) => {\n        e.preventDefault();\n        if(employeeEmailId!==''){\n           setEmployeeEmailId('');\n        }\n        if(employeeId!==''){\n           setEmployeeId('');\n        }\n        \n    }\n\n    useEffect(() => {\n        setEmployeeId('')\n        setEmployeeEmailId('')\n    }, [])\n\n    return (\n        <div>\n        <br /><br />\n        <div className = \"container\">\n             <div className = \"row\">\n                 <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                     <div className = \"card-body\">\n                         <form>\n                             <div className = \"form-group mb-2\">\n                                <label className = \"form-label\"> Employee Email Id :</label>\n                                <input\n                                    type = \"text\"\n                                    placeholder = \"Enter employee email id\"\n                                    name = \"employeeEmailId\"\n                                    className = \"form-control\"\n                                    value = {employeeEmailId}\n                                    onChange = {(e) => setEmployeeEmailId(e.target.value)}\n                                >\n                                </input>\n                             </div>\n                             <div className = \"form-group mb-2\">\n                                <label className = \"form-label\"> Employee Id :</label>\n                                <input\n                                    type = \"text\"\n                                    placeholder = \"Enter employee id\"\n                                    name = \"employeeId\"\n                                    className = \"form-control\"\n                                    value = {employeeId}\n                                    onChange = {(e) => setEmployeeId(e.target.value)}\n                                >\n                                </input>\n                             </div>\n                             <div>\n                               <button className = \"btn btn-success\" \n                                 onClick = {(e) => loginToPortal(e)} >\n                                     Login \n                               </button>&nbsp;&nbsp;\n                               <button className = \"btn btn-success\" \n                                 onClick = {(e) => resetLogin(e)} >\n                                     Reset \n                               </button>\n                             </div>\n                             \n                         </form>\n\n                     </div>\n                 </div>\n             </div>\n\n        </div>\n\n     </div>\n    )\n}\n\nexport default LoginComponent\n",["38","39"],"D:\\My_Folder\\SpringBoot-React-projects\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\ResignationFormComponent.js",["40"],{"ruleId":"41","severity":1,"message":"42","line":19,"column":39,"nodeType":"43","messageId":"44","endLine":19,"endColumn":40,"suggestions":"45"},{"ruleId":"41","severity":1,"message":"42","line":19,"column":55,"nodeType":"43","messageId":"44","endLine":19,"endColumn":56,"suggestions":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":75,"column":8,"nodeType":"53","endLine":75,"endColumn":10,"suggestions":"54"},"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["55","56"],["57","58"],"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'empEmail' and 'empId'. Either include them or remove the dependency array.","ArrayExpression",["61"],{"messageId":"62","fix":"63","desc":"64"},{"messageId":"65","fix":"66","desc":"67"},{"messageId":"62","fix":"68","desc":"64"},{"messageId":"65","fix":"69","desc":"67"},"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"removeEscape",{"range":"72","text":"73"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"74","text":"75"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"76","text":"73"},{"range":"77","text":"75"},"Update the dependencies array to be: [empEmail, empId]",{"range":"78","text":"79"},[604,605],"",[604,604],"\\",[620,621],[620,620],[3232,3234],"[empEmail, empId]"]