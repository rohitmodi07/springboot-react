{"ast":null,"code":"var _jsxFileName = \"D:\\\\My_Folder\\\\SpringBoot-React-projects\\\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\\\react-hooks-frontend\\\\src\\\\components\\\\LoginComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginComponent = () => {\n  _s();\n\n  const [employeeName, setEmployeeName] = useState('');\n  const [employeeId, setEmployeeId] = useState('');\n  const [empExist, setEmpExist] = useState(false);\n  const history = useHistory();\n\n  const loginToPortal = e => {\n    if (employeeName === '') {\n      alert(\"Employee name is mandatory !\");\n      return false;\n    }\n\n    if (employeeId === '') {\n      alert(\"Employee Id is mandatory !\");\n      return false;\n    }\n\n    e.preventDefault();\n    EmployeeService.loginService(employeeId).then(response => {\n      if (response.data !== '') {\n        let path = `/add-employee/${employeeId}`;\n        history.push(path);\n      } else {\n        setEmpExist(true); // alert(\"employee does not exist!\")\n\n        return false;\n      }\n    }).catch(error => {\n      console.log(error);\n      setEmpExist(true); //alert(\"employee does not exist!\")\n\n      return false;\n    });\n  };\n\n  const resetLogin = e => {\n    e.preventDefault();\n\n    if (employeeName !== '') {\n      setEmployeeName('');\n    }\n\n    if (employeeId !== '') {\n      setEmployeeId('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }, this), empExist, \" ? \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Employee does not exist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 22\n    }, this), \" : \", /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 55\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card col-md-6 offset-md-3 offset-md-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \" Employee Name :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Enter employee name\",\n                  name: \"employeeName\",\n                  className: \"form-control\",\n                  value: employeeName,\n                  onChange: e => setEmployeeName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 30\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \" Employee Id :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Enter employee id\",\n                  name: \"employeeId\",\n                  className: \"form-control\",\n                  value: employeeId,\n                  onChange: e => setEmployeeId(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 30\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  onClick: e => loginToPortal(e),\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 32\n                }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  onClick: e => resetLogin(e),\n                  children: \"Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 32\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginComponent, \"DfrW//qotDsJbfVcIv5PdA2uS/w=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginComponent;\nexport default LoginComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"sources":["D:/My_Folder/SpringBoot-React-projects/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/components/LoginComponent.js"],"names":["React","useState","useHistory","EmployeeService","LoginComponent","employeeName","setEmployeeName","employeeId","setEmployeeId","empExist","setEmpExist","history","loginToPortal","e","alert","preventDefault","loginService","then","response","data","path","push","catch","error","console","log","resetLogin","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService'\n\nconst LoginComponent = () => {\n\n    const [employeeName, setEmployeeName] = useState('');\n    const [employeeId, setEmployeeId] = useState('');\n    const [empExist, setEmpExist] = useState(false);\n    const history = useHistory();\n\n    const loginToPortal = (e) => {\n        if(employeeName === ''){\n            alert(\"Employee name is mandatory !\");\n            return false;\n         }\n         if(employeeId === ''){\n            alert(\"Employee Id is mandatory !\");\n            return false;\n         }\n        e.preventDefault();\n\n        EmployeeService.loginService(employeeId).then((response) =>{\n            if(response.data!==''){\n                let path = `/add-employee/${employeeId}`;\n                history.push(path);\n            }else{\n                setEmpExist(true)\n               // alert(\"employee does not exist!\")\n                return false;\n            }\n        }).catch(error => {\n            console.log(error)\n            setEmpExist(true)\n            //alert(\"employee does not exist!\")\n            return false;\n        })\n\n        \n    }\n\n    const resetLogin = (e) => {\n        e.preventDefault();\n        if(employeeName!==''){\n           setEmployeeName('');\n        }\n        if(employeeId!==''){\n           setEmployeeId('');\n        }\n        \n    }\n\n    return (\n        <div>\n        <br /><br />\n        {empExist} ? <p>Employee does not exist</p> : <p></p>\n        <div className = \"container\">\n             <div className = \"row\">\n                 <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                     <div className = \"card-body\">\n                         <form>\n                             <div className = \"form-group mb-2\">\n                                <label className = \"form-label\"> Employee Name :</label>\n                                <input\n                                    type = \"text\"\n                                    placeholder = \"Enter employee name\"\n                                    name = \"employeeName\"\n                                    className = \"form-control\"\n                                    value = {employeeName}\n                                    onChange = {(e) => setEmployeeName(e.target.value)}\n                                >\n                                </input>\n                             </div>\n                             <div className = \"form-group mb-2\">\n                                <label className = \"form-label\"> Employee Id :</label>\n                                <input\n                                    type = \"text\"\n                                    placeholder = \"Enter employee id\"\n                                    name = \"employeeId\"\n                                    className = \"form-control\"\n                                    value = {employeeId}\n                                    onChange = {(e) => setEmployeeId(e.target.value)}\n                                >\n                                </input>\n                             </div>\n                             <div>\n                               <button className = \"btn btn-success\" \n                                 onClick = {(e) => loginToPortal(e)} >\n                                     Login \n                               </button>&nbsp;&nbsp;\n                               <button className = \"btn btn-success\" \n                                 onClick = {(e) => resetLogin(e)} >\n                                     Reset \n                               </button>\n                             </div>\n                             \n                         </form>\n\n                     </div>\n                 </div>\n             </div>\n\n        </div>\n\n     </div>\n    )\n}\n\nexport default LoginComponent\n"]},"metadata":{},"sourceType":"module"}